-- Games
create table if not exists public.games (
  id bigint generated by default as identity primary key,
  igdb_id integer unique,
  name text not null,
  cover_url text,
  summary text,
  created_at timestamptz default now()
);

-- Reviews
create table if not exists public.reviews (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users on delete cascade,
  game_id bigint references public.games on delete cascade,
  rating smallint check (rating between 1 and 100),
  review text,
  created_at timestamptz default now(),
  unique (user_id, game_id)
);

-- RLS on reviews
alter table public.reviews enable row level security;

drop policy if exists "users can read reviews" on public.reviews;
create policy "users can read reviews"
  on public.reviews for select using (true);

drop policy if exists "users can CRUD their own reviews" on public.reviews;
create policy "users can CRUD their own reviews"
  on public.reviews for all
  using  (auth.uid() = user_id)
  with check (auth.uid() = user_id);